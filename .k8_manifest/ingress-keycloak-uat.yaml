apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-keycloak-2
  namespace: backend
  annotations:
#    cert-manager:io/cluster-issuer: lets-encrypt-staging
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: ALLOWALL";
#      more_set_headers  "Content-Security-Policy "default-src *  data: blob: filesystem: about: ws: wss: 'unsafe-inline' 'unsafe-eval' 'unsafe-dynamic'; script-src * data: blob: 'unsafe-inline' 'unsafe-eval'; connect-src * data: blob: 'unsafe-inline'; img-src * data: blob: 'unsafe-inline'; frame-src * data: blob: ; style-src * data: blob: 'unsafe-inline'; font-src * data: blob: 'unsafe-inline';"
#      more_set_headers "X-Xss-Protection: 1; mode=block";
#      more_set_headers "X-Content-Type-Options: nosniff";
#      more_clear_headers "Cache-Control";
#      more_set_headers "Cache-Control: must-revalidate";
#      proxy_hide_header Content-Security-Policy;
#      proxy_hide_header "X-Frame-Options";
#      proxy_hide_header "X-Frame-Options";
#      proxy_set_header l5d-dst-override;

#    cert-manager.io/acme-challenge-type: http01
#    nginx.ingress.kubernetes.io/use-regex: "true"
##    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#    kubernetes.io/ingress.class: nginx
#    cert-manager.io/issuer: letsencrypt-nginx
#  annotations:
#    kubernetes.io/ingress.class: nginx
#    cert-manager:io/cluster-issuer: nlets-encrypt-staging
spec:
   tls:
    - hosts:
        - "*.lctafrica.net"
      secretName: lct-tls-secret
   rules:
    - host: keycloak.lctafrica.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak-service
                port:
                  number: 8090
   ingressClassName: nginx